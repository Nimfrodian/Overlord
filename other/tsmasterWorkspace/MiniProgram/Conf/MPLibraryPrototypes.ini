[rtlUICANoeController]
=s32 canoe_connect(void);
=s32 canoe_disconnect(void);
=s32 canoe_get_version(ps32 AVersionMajor, ps32 AVersionMinor, ps32 AVersionBuild);
=s32 canoe_load_configuration(const char* AFileName);
=s32 canoe_get_system_var_s32(const char* ANamespace, const char* AVarName, ps32 AValue);
=s32 canoe_set_system_var_s32(const char* ANamespace, const char* AVarName, const s32 AValue);
=s32 canoe_get_system_var_u32(const char* ANamespace, const char* AVarName, pu32 AValue);
=s32 canoe_set_system_var_u32(const char* ANamespace, const char* AVarName, const u32 AValue);
=s32 canoe_get_system_var_s64(const char* ANamespace, const char* AVarName, ps64 AValue);
=s32 canoe_set_system_var_s64(const char* ANamespace, const char* AVarName, const s64 AValue);
=s32 canoe_get_system_var_u64(const char* ANamespace, const char* AVarName, pu64 AValue);
=s32 canoe_set_system_var_u64(const char* ANamespace, const char* AVarName, const u64 AValue);
=s32 canoe_get_system_var_double(const char* ANamespace, const char* AVarName, pdouble AValue);
=s32 canoe_set_system_var_double(const char* ANamespace, const char* AVarName, const double AValue);
=s32 canoe_get_system_var_string(const char* ANamespace, const char* AVarName, char** AValue);
=s32 canoe_set_system_var_string(const char* ANamespace, const char* AVarName, const char* AValue);
=s32 canoe_create_system_var(const char* ANamespace, const char* AVarName, const double AInitValue, const double AMin, const double AMax);
=s32 canoe_set_configuration_modified(const bool AIsModified);
=s32 canoe_write(const char* AInfo);
=s32 canoe_start(void);
=s32 canoe_stop(void);
=s32 canoe_is_running(bool* AIsRunning);
=s32 canoe_save_configuration(void);
=s32 canoe_save_configuration_as(const char* AFileName, const s32 AVersionMajor, const s32 AVersionMinor);
[rtlSignalComparer]
=s32 AddSystemVarToPanel(const char* APanelCaption, const char* AVarName);
=s32 DeleteSystemVarFromPanel(const char* APanelCaption, const char* AVarName);
=s32 ClearAllSignalsFromPanel(const char* APanelCaption);
